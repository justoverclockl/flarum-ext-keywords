{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAY,I,aCa7D,SAASC,EAAeC,EAAQC,GAE9BD,EADqBE,KAAKC,UAAUF,GAEtC,CAEAG,IAAAA,aAAiBC,IAAI,qCAAqC,WACxDD,IAAAA,cAAiB,IAAK,0BAA0BE,gBAAgB,CAC9DC,QAAS,oCACTC,MAAOJ,IAAAA,WAAeK,MAAM,uCAC5BC,KAAM,YAGRN,IAAAA,cAAiB,IAAK,0BAA0BE,iBAAgB,WAC9D,IAAMN,EAASW,KAAKJ,QAAQ,gCACxBN,EAAWC,KAAKU,MAAMZ,KAAY,MAClCa,EAAO7B,OAAO8B,QAAQb,GAEpBc,EAAY,SAACjC,EAAKa,EAAOqB,GAC7BH,EAAKG,GAAS,CAAClC,EAAKa,GACpBM,EAAWjB,OAAOiC,YAAYJ,GAC9Bd,EAAeC,EAAQC,EACzB,EAkBA,OACEiB,EAAA,WACGL,EAAKM,KAAI,SAAAC,EAAeJ,GAAK,IAAlBlC,EAAGsC,EAAA,GAAEzB,EAAKyB,EAAA,UACpBF,EAAA,WACEA,EAAA,aACGd,IAAAA,WAAeK,MAAM,kCAAkC,IACxDS,EAAA,SACEG,UAAU,WACV1B,MAAOb,EACPwC,QAAS,SAACC,GAAC,OAAKR,EAAUQ,EAAEC,OAAO7B,MAAOA,EAAOqB,EAAM,KAG3DE,EAAA,aACGd,IAAAA,WAAeK,MAAM,wCAAwC,IAC9DS,EAAA,SACEG,UAAU,WACV1B,MAAOA,EACP2B,QAAS,SAACC,GAAC,OAAKR,EAAUjC,EAAKyC,EAAEC,OAAO7B,MAAOqB,EAAM,KArB7C,SAACA,GACnB,OAAOH,EAAKY,OAAS,GAAsB,IAAhBZ,EAAKY,QAA0B,IAAVT,CAClD,CAsBSU,CAAYV,IACXE,EAAA,UAAQG,UAAU,yBAAyBX,KAAK,SAASiB,QAAS,kBA/B1D,SAACX,GACjBH,EAAKe,OAAOZ,EAAO,GACnBf,EAAWjB,OAAOiC,YAAYJ,GAC9Bd,EAAeC,EAAQC,EACzB,CA2BkF4B,CAAUb,EAAM,GACtFE,EAAA,KAAGG,UAAU,sBAGb,IAERH,EAAA,UAAQY,MAAM,mCAAmCpB,KAAK,SAASiB,QA3CpD,WACbd,EAAKkB,KAAK,CAAC,GAAI,KACf9B,EAAWjB,OAAOiC,YAAYJ,GAC9Bd,EAAeC,EAAQC,EACzB,GAwCOG,IAAAA,WAAeK,MAAM,qCAI9B,GACF,G","sources":["webpack://@justoverclock/flarum-ext-keywords/webpack/bootstrap","webpack://@justoverclock/flarum-ext-keywords/webpack/runtime/compat get default export","webpack://@justoverclock/flarum-ext-keywords/webpack/runtime/define property getters","webpack://@justoverclock/flarum-ext-keywords/webpack/runtime/hasOwnProperty shorthand","webpack://@justoverclock/flarum-ext-keywords/webpack/runtime/make namespace object","webpack://@justoverclock/flarum-ext-keywords/external root \"flarum.core.compat['app']\"","webpack://@justoverclock/flarum-ext-keywords/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","/*\n * This file is part of justoverclock/flarum-ext-keywords.\n *\n * Copyright (c) 2021 Marco Colia.\n * Special thanks to Askvortsov\n * https://flarum.it\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/app';\n\nfunction updateMappings(stream, mappings) {\n  const mappingsJSON = JSON.stringify(mappings);\n  stream(mappingsJSON);\n}\n\napp.initializers.add('justoverclock/flarum-ext-keywords', () => {\n  app.extensionData.for('justoverclock-keywords').registerSetting({\n    setting: 'justoverclock-keywords.parse.once',\n    label: app.translator.trans('flarum-ext-keywords.admin.parseonce'),\n    type: 'boolean',\n  });\n\n  app.extensionData.for('justoverclock-keywords').registerSetting(function () {\n    const stream = this.setting('justoverclock-keywords.AdDef');\n    let mappings = JSON.parse(stream() || '{}');\n    let rows = Object.entries(mappings);\n\n    const updateRow = (key, value, index) => {\n      rows[index] = [key, value];\n      mappings = Object.fromEntries(rows);\n      updateMappings(stream, mappings);\n    };\n\n    const addRow = () => {\n      rows.push(['', '']);\n      mappings = Object.fromEntries(rows);\n      updateMappings(stream, mappings);\n    };\n\n    const deleteRow = (index) => {\n      rows.splice(index, 1);\n      mappings = Object.fromEntries(rows);\n      updateMappings(stream, mappings);\n    };\n\n    const isDeletable = (index) => {\n      return rows.length > 1 || (rows.length === 1 && index === 0);\n    };\n\n    return (\n      <div>\n        {rows.map(([key, value], index) => (\n          <div>\n            <label>\n              {app.translator.trans('flarum-ext-keywords.admin.word')}:\n              <input\n                className=\"fieldinp\"\n                value={key}\n                oninput={(e) => updateRow(e.target.value, value, index)}\n              />\n            </label>\n            <label>\n              {app.translator.trans('flarum-ext-keywords.admin.definition')}:\n              <input\n                className=\"fieldinp\"\n                value={value}\n                oninput={(e) => updateRow(key, e.target.value, index)}\n              />\n            </label>\n            {isDeletable(index) && (\n              <button className=\"Button Button--primary\" type=\"button\" onclick={() => deleteRow(index)}>\n                <i className=\"far fa-trash-alt\"></i>\n              </button>\n            )}\n          </div>\n        ))}\n        <button class=\"Button Button--primary addrowbtn\" type=\"button\" onclick={addRow}>\n          {app.translator.trans('flarum-ext-keywords.admin.addRow')}\n        </button>\n      </div>\n    );\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","updateMappings","stream","mappings","JSON","stringify","app","add","registerSetting","setting","label","trans","type","this","parse","rows","entries","updateRow","index","fromEntries","m","map","_ref","className","oninput","e","target","length","isDeletable","onclick","splice","deleteRow","class","push"],"sourceRoot":""}